name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME_MIQ: ghcr.io/kaeyros-analytics/miq:latest  
  CONTAINER_NAME_MIQ: miq_container

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u "${{ secrets.USERNAME }}" --password-stdin

      - name: Create .env file for frontend
        run: |
          touch .env && \
          echo "NEXT_PUBLIC_API_URL=ht" >> .env

      - name: Build the Docker image for frontend
        run: |
          docker build -t ${{ env.IMAGE_NAME_MIQ }} .

      - name: Push  image to GitHub Container Registry
        run: |
          docker push ${{ env.IMAGE_NAME_MIQ }}

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci
    environment: production

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Deploy to my dedicated server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd /home/antid
            echo "${{ secrets.TOKEN }}" |  docker login ghcr.io -u "${{ secrets.USERNAME }}" --password-stdin
            docker pull ${{ env.IMAGE_NAME_MIQ }}
            docker rm -f mik
            docker run -d \
              -p 0:3000 \
              --name mik \
              --label 'traefik.enable=true' \
              --label 'traefik.http.services.miqfrontend.loadbalancer.server.port=3000' \
              --label 'traefik.http.routers.miqfrontend.rule=Host(`miq.nrw`) || Host(`www.miq.nrw`)' \
              ghcr.io/kaeyros-analytics/miq:latest
